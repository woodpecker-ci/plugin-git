variables:
  - &golang 'golang:1.21-alpine'
  - &platforms 'linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/riscv64,linux/s390x'
  # vars used on push / tag events only
  - publish_logins: &publish_logins
      # Default DockerHub login
      - registry: https://index.docker.io/v1/
        username:
          from_secret: docker_username
        password:
          from_secret: docker_password
      # Additional Quay.IO login
      - registry: https://quay.io
        username:
          from_secret: QUAY_IO_USER
        password:
          from_secret: QUAY_IO_TOKEN
  - &publish_repos 'woodpeckerci/plugin-git,quay.io/woodpeckerci/plugin-git'

steps:
  vendor:
    image: *golang
    commands:
      - go mod vendor

  lint:
    image: *golang
    depends_on: vendor
    commands:
      - apk add make
      - make vet
      - make formatcheck
    when:
      - event: pull_request
      - event: push
        branch: renovate/*

  test:
    image: *golang
    depends_on: vendor
    commands:
      - apk add make git-lfs
      - make test
    when:
      - event: pull_request
      - event: push
        branch: renovate/*

  build-dryrun:
    image: woodpeckerci/plugin-docker-buildx:2.3.0
    depends_on:
      - lint
      - test
    settings:
      repo: test/repo
      dockerfile: ./docker/Dockerfile.multiarch
      dry_run: true
      platforms: *platforms
      tags: latest
    when:
      - event: pull_request
      - event: push
        branch: renovate/*

  release-next:
    image: woodpeckerci/plugin-docker-buildx:2.3.0
    depends_on: vendor
    settings:
      repo: *publish_repos
      dockerfile: ./docker/Dockerfile.multiarch
      platforms: *platforms
      tags: next
      logins: *publish_logins
    when:
      branch: ${CI_REPO_DEFAULT_BRANCH}
      event: push

  release-tag:
    image: woodpeckerci/plugin-docker-buildx:2.3.0
    depends_on: vendor
    settings:
      repo: *publish_repos
      dockerfile: ./docker/Dockerfile.multiarch
      platforms: *platforms
      auto_tag: true
      # remove line below if you can read it on a release branch and it's not the latest release branch
      tags: latest
      logins: *publish_logins
    when:
      event: tag

  build-binaries:
    image: *golang
    depends_on: vendor
    commands:
      - apk add make
      - make release
    when:
      event: tag

  release-binaries:
    image: woodpeckerci/plugin-github-release:1.1.0
    depends_on: build-binaries
    secrets: [github_token]
    settings:
      files:
        - release/*
      title: ${CI_COMMIT_TAG##v}
    when:
      event: tag

when:
  - event: pull_request
  - event: tag
  - event: push
    branch:
      - ${CI_REPO_DEFAULT_BRANCH}
      - renovate/*
